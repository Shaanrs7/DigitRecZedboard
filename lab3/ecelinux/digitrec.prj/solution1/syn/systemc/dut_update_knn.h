// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_update_knn_HH_
#define _dut_update_knn_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dut_update_knn : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<49> > test_inst_V;
    sc_in< sc_lv<48> > train_inst_V;
    sc_out< sc_lv<5> > min_distances_V_address0;
    sc_out< sc_logic > min_distances_V_ce0;
    sc_out< sc_logic > min_distances_V_we0;
    sc_out< sc_lv<6> > min_distances_V_d0;
    sc_in< sc_lv<6> > min_distances_V_q0;
    sc_in< sc_lv<4> > tmp_27;


    // Module declarations
    dut_update_knn(sc_module_name name);
    SC_HAS_PROCESS(dut_update_knn);

    ~dut_update_knn();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_21;
    sc_signal< sc_lv<6> > tmp_1_fu_126_p2;
    sc_signal< sc_lv<6> > tmp_1_reg_221;
    sc_signal< sc_lv<49> > r_V_fu_136_p2;
    sc_signal< sc_lv<49> > r_V_reg_226;
    sc_signal< sc_lv<6> > i_fu_152_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_51;
    sc_signal< sc_lv<6> > dist_V_fu_169_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_146_p2;
    sc_signal< sc_lv<2> > i_1_fu_181_p2;
    sc_signal< sc_lv<2> > i_1_reg_254;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_66;
    sc_signal< sc_lv<1> > tmp_4_fu_190_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_259;
    sc_signal< sc_lv<1> > exitcond_fu_175_p2;
    sc_signal< sc_lv<5> > min_distances_V_addr_reg_263;
    sc_signal< sc_lv<6> > p_s_reg_74;
    sc_signal< sc_lv<6> > bvh_d_index_reg_87;
    sc_signal< sc_lv<2> > i1_reg_98;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_94;
    sc_signal< sc_lv<64> > tmp_2_cast_fu_205_p1;
    sc_signal< sc_lv<2> > p_1_fu_40;
    sc_signal< sc_lv<1> > tmp_6_fu_210_p2;
    sc_signal< sc_lv<6> > tmp_fu_118_p3;
    sc_signal< sc_lv<6> > tmp_27_cast_cast_fu_114_p1;
    sc_signal< sc_lv<49> > train_inst_V_cast_fu_132_p1;
    sc_signal< sc_lv<32> > index_assign_cast2_fu_142_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_158_p3;
    sc_signal< sc_lv<6> > tmp_1_cast_fu_165_p1;
    sc_signal< sc_lv<6> > tmp_5_cast_fu_196_p1;
    sc_signal< sc_lv<6> > tmp_2_fu_200_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<2> ap_const_lv2_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_21();
    void thread_ap_sig_51();
    void thread_ap_sig_66();
    void thread_ap_sig_94();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_dist_V_fu_169_p2();
    void thread_exitcond1_fu_146_p2();
    void thread_exitcond_fu_175_p2();
    void thread_i_1_fu_181_p2();
    void thread_i_fu_152_p2();
    void thread_index_assign_cast2_fu_142_p1();
    void thread_min_distances_V_address0();
    void thread_min_distances_V_ce0();
    void thread_min_distances_V_d0();
    void thread_min_distances_V_we0();
    void thread_r_V_fu_136_p2();
    void thread_tmp_1_cast_fu_165_p1();
    void thread_tmp_1_fu_126_p2();
    void thread_tmp_27_cast_cast_fu_114_p1();
    void thread_tmp_2_cast_fu_205_p1();
    void thread_tmp_2_fu_200_p2();
    void thread_tmp_3_fu_158_p3();
    void thread_tmp_4_fu_190_p2();
    void thread_tmp_5_cast_fu_196_p1();
    void thread_tmp_6_fu_210_p2();
    void thread_tmp_fu_118_p3();
    void thread_train_inst_V_cast_fu_132_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
