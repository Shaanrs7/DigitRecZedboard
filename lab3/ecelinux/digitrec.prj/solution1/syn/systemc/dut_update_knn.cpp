// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut_update_knn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut_update_knn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut_update_knn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> dut_update_knn::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> dut_update_knn::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> dut_update_knn::ap_ST_st3_fsm_2 = "100";
const sc_lv<4> dut_update_knn::ap_ST_st4_fsm_3 = "1000";
const sc_lv<32> dut_update_knn::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut_update_knn::ap_const_lv1_1 = "1";
const sc_lv<32> dut_update_knn::ap_const_lv32_1 = "1";
const sc_lv<1> dut_update_knn::ap_const_lv1_0 = "0";
const sc_lv<32> dut_update_knn::ap_const_lv32_2 = "10";
const sc_lv<6> dut_update_knn::ap_const_lv6_0 = "000000";
const sc_lv<2> dut_update_knn::ap_const_lv2_0 = "00";
const sc_lv<32> dut_update_knn::ap_const_lv32_3 = "11";
const sc_lv<2> dut_update_knn::ap_const_lv2_1 = "1";
const sc_lv<6> dut_update_knn::ap_const_lv6_31 = "110001";
const sc_lv<6> dut_update_knn::ap_const_lv6_1 = "1";
const sc_lv<2> dut_update_knn::ap_const_lv2_3 = "11";

dut_update_knn::dut_update_knn(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_175_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_175_p2 );

    SC_METHOD(thread_ap_sig_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_51 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_66 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_94 );

    SC_METHOD(thread_dist_V_fu_169_p2);
    sensitive << ( p_s_reg_74 );
    sensitive << ( tmp_1_cast_fu_165_p1 );

    SC_METHOD(thread_exitcond1_fu_146_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( bvh_d_index_reg_87 );

    SC_METHOD(thread_exitcond_fu_175_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( i1_reg_98 );

    SC_METHOD(thread_i_1_fu_181_p2);
    sensitive << ( i1_reg_98 );

    SC_METHOD(thread_i_fu_152_p2);
    sensitive << ( bvh_d_index_reg_87 );

    SC_METHOD(thread_index_assign_cast2_fu_142_p1);
    sensitive << ( bvh_d_index_reg_87 );

    SC_METHOD(thread_min_distances_V_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( min_distances_V_addr_reg_263 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_2_cast_fu_205_p1 );

    SC_METHOD(thread_min_distances_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_min_distances_V_d0);
    sensitive << ( p_s_reg_74 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_min_distances_V_we0);
    sensitive << ( tmp_4_reg_259 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_6_fu_210_p2 );

    SC_METHOD(thread_r_V_fu_136_p2);
    sensitive << ( test_inst_V );
    sensitive << ( train_inst_V_cast_fu_132_p1 );

    SC_METHOD(thread_tmp_1_cast_fu_165_p1);
    sensitive << ( tmp_3_fu_158_p3 );

    SC_METHOD(thread_tmp_1_fu_126_p2);
    sensitive << ( tmp_fu_118_p3 );
    sensitive << ( tmp_27_cast_cast_fu_114_p1 );

    SC_METHOD(thread_tmp_27_cast_cast_fu_114_p1);
    sensitive << ( tmp_27 );

    SC_METHOD(thread_tmp_2_cast_fu_205_p1);
    sensitive << ( tmp_2_fu_200_p2 );

    SC_METHOD(thread_tmp_2_fu_200_p2);
    sensitive << ( tmp_1_reg_221 );
    sensitive << ( tmp_5_cast_fu_196_p1 );

    SC_METHOD(thread_tmp_3_fu_158_p3);
    sensitive << ( r_V_reg_226 );
    sensitive << ( index_assign_cast2_fu_142_p1 );

    SC_METHOD(thread_tmp_4_fu_190_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_175_p2 );
    sensitive << ( p_1_fu_40 );

    SC_METHOD(thread_tmp_5_cast_fu_196_p1);
    sensitive << ( i1_reg_98 );

    SC_METHOD(thread_tmp_6_fu_210_p2);
    sensitive << ( min_distances_V_q0 );
    sensitive << ( tmp_4_reg_259 );
    sensitive << ( p_s_reg_74 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_tmp_fu_118_p3);
    sensitive << ( tmp_27 );

    SC_METHOD(thread_train_inst_V_cast_fu_132_p1);
    sensitive << ( train_inst_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_146_p2 );
    sensitive << ( exitcond_fu_175_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_update_knn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, test_inst_V, "(port)test_inst_V");
    sc_trace(mVcdFile, train_inst_V, "(port)train_inst_V");
    sc_trace(mVcdFile, min_distances_V_address0, "(port)min_distances_V_address0");
    sc_trace(mVcdFile, min_distances_V_ce0, "(port)min_distances_V_ce0");
    sc_trace(mVcdFile, min_distances_V_we0, "(port)min_distances_V_we0");
    sc_trace(mVcdFile, min_distances_V_d0, "(port)min_distances_V_d0");
    sc_trace(mVcdFile, min_distances_V_q0, "(port)min_distances_V_q0");
    sc_trace(mVcdFile, tmp_27, "(port)tmp_27");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_21, "ap_sig_21");
    sc_trace(mVcdFile, tmp_1_fu_126_p2, "tmp_1_fu_126_p2");
    sc_trace(mVcdFile, tmp_1_reg_221, "tmp_1_reg_221");
    sc_trace(mVcdFile, r_V_fu_136_p2, "r_V_fu_136_p2");
    sc_trace(mVcdFile, r_V_reg_226, "r_V_reg_226");
    sc_trace(mVcdFile, i_fu_152_p2, "i_fu_152_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_51, "ap_sig_51");
    sc_trace(mVcdFile, dist_V_fu_169_p2, "dist_V_fu_169_p2");
    sc_trace(mVcdFile, exitcond1_fu_146_p2, "exitcond1_fu_146_p2");
    sc_trace(mVcdFile, i_1_fu_181_p2, "i_1_fu_181_p2");
    sc_trace(mVcdFile, i_1_reg_254, "i_1_reg_254");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_66, "ap_sig_66");
    sc_trace(mVcdFile, tmp_4_fu_190_p2, "tmp_4_fu_190_p2");
    sc_trace(mVcdFile, tmp_4_reg_259, "tmp_4_reg_259");
    sc_trace(mVcdFile, exitcond_fu_175_p2, "exitcond_fu_175_p2");
    sc_trace(mVcdFile, min_distances_V_addr_reg_263, "min_distances_V_addr_reg_263");
    sc_trace(mVcdFile, p_s_reg_74, "p_s_reg_74");
    sc_trace(mVcdFile, bvh_d_index_reg_87, "bvh_d_index_reg_87");
    sc_trace(mVcdFile, i1_reg_98, "i1_reg_98");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_94, "ap_sig_94");
    sc_trace(mVcdFile, tmp_2_cast_fu_205_p1, "tmp_2_cast_fu_205_p1");
    sc_trace(mVcdFile, p_1_fu_40, "p_1_fu_40");
    sc_trace(mVcdFile, tmp_6_fu_210_p2, "tmp_6_fu_210_p2");
    sc_trace(mVcdFile, tmp_fu_118_p3, "tmp_fu_118_p3");
    sc_trace(mVcdFile, tmp_27_cast_cast_fu_114_p1, "tmp_27_cast_cast_fu_114_p1");
    sc_trace(mVcdFile, train_inst_V_cast_fu_132_p1, "train_inst_V_cast_fu_132_p1");
    sc_trace(mVcdFile, index_assign_cast2_fu_142_p1, "index_assign_cast2_fu_142_p1");
    sc_trace(mVcdFile, tmp_3_fu_158_p3, "tmp_3_fu_158_p3");
    sc_trace(mVcdFile, tmp_1_cast_fu_165_p1, "tmp_1_cast_fu_165_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_196_p1, "tmp_5_cast_fu_196_p1");
    sc_trace(mVcdFile, tmp_2_fu_200_p2, "tmp_2_fu_200_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dut_update_knn::~dut_update_knn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dut_update_knn::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0))) {
        bvh_d_index_reg_87 = i_fu_152_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        bvh_d_index_reg_87 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        i1_reg_98 = i_1_reg_254.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                !esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0))) {
        i1_reg_98 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_259.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_210_p2.read()))) {
        p_1_fu_40 = ap_const_lv2_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                 !esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_259.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_210_p2.read())))) {
        p_1_fu_40 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0))) {
        p_s_reg_74 = dist_V_fu_169_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        p_s_reg_74 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        i_1_reg_254 = i_1_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_175_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_190_p2.read()))) {
        min_distances_V_addr_reg_263 =  (sc_lv<5>) (tmp_2_cast_fu_205_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        r_V_reg_226 = r_V_fu_136_p2.read();
        tmp_1_reg_221 = tmp_1_fu_126_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_175_p2.read()))) {
        tmp_4_reg_259 = tmp_4_fu_190_p2.read();
    }
}

void dut_update_knn::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_175_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_175_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_21() {
    ap_sig_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut_update_knn::thread_ap_sig_51() {
    ap_sig_51 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut_update_knn::thread_ap_sig_66() {
    ap_sig_66 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut_update_knn::thread_ap_sig_94() {
    ap_sig_94 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut_update_knn::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_51.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_66.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_94.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_dist_V_fu_169_p2() {
    dist_V_fu_169_p2 = (!p_s_reg_74.read().is_01() || !tmp_1_cast_fu_165_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_s_reg_74.read()) + sc_biguint<6>(tmp_1_cast_fu_165_p1.read()));
}

void dut_update_knn::thread_exitcond1_fu_146_p2() {
    exitcond1_fu_146_p2 = (!bvh_d_index_reg_87.read().is_01() || !ap_const_lv6_31.is_01())? sc_lv<1>(): sc_lv<1>(bvh_d_index_reg_87.read() == ap_const_lv6_31);
}

void dut_update_knn::thread_exitcond_fu_175_p2() {
    exitcond_fu_175_p2 = (!i1_reg_98.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_98.read() == ap_const_lv2_3);
}

void dut_update_knn::thread_i_1_fu_181_p2() {
    i_1_fu_181_p2 = (!i1_reg_98.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_98.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dut_update_knn::thread_i_fu_152_p2() {
    i_fu_152_p2 = (!bvh_d_index_reg_87.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(bvh_d_index_reg_87.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dut_update_knn::thread_index_assign_cast2_fu_142_p1() {
    index_assign_cast2_fu_142_p1 = esl_zext<32,6>(bvh_d_index_reg_87.read());
}

void dut_update_knn::thread_min_distances_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        min_distances_V_address0 = min_distances_V_addr_reg_263.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        min_distances_V_address0 =  (sc_lv<5>) (tmp_2_cast_fu_205_p1.read());
    } else {
        min_distances_V_address0 = "XXXXX";
    }
}

void dut_update_knn::thread_min_distances_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        min_distances_V_ce0 = ap_const_logic_1;
    } else {
        min_distances_V_ce0 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_min_distances_V_d0() {
    min_distances_V_d0 = p_s_reg_74.read();
}

void dut_update_knn::thread_min_distances_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_259.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_210_p2.read())))) {
        min_distances_V_we0 = ap_const_logic_1;
    } else {
        min_distances_V_we0 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_r_V_fu_136_p2() {
    r_V_fu_136_p2 = (train_inst_V_cast_fu_132_p1.read() ^ test_inst_V.read());
}

void dut_update_knn::thread_tmp_1_cast_fu_165_p1() {
    tmp_1_cast_fu_165_p1 = esl_zext<6,1>(tmp_3_fu_158_p3.read());
}

void dut_update_knn::thread_tmp_1_fu_126_p2() {
    tmp_1_fu_126_p2 = (!tmp_fu_118_p3.read().is_01() || !tmp_27_cast_cast_fu_114_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_fu_118_p3.read()) - sc_biguint<6>(tmp_27_cast_cast_fu_114_p1.read()));
}

void dut_update_knn::thread_tmp_27_cast_cast_fu_114_p1() {
    tmp_27_cast_cast_fu_114_p1 = esl_zext<6,4>(tmp_27.read());
}

void dut_update_knn::thread_tmp_2_cast_fu_205_p1() {
    tmp_2_cast_fu_205_p1 = esl_sext<64,6>(tmp_2_fu_200_p2.read());
}

void dut_update_knn::thread_tmp_2_fu_200_p2() {
    tmp_2_fu_200_p2 = (!tmp_1_reg_221.read().is_01() || !tmp_5_cast_fu_196_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_221.read()) + sc_biguint<6>(tmp_5_cast_fu_196_p1.read()));
}

void dut_update_knn::thread_tmp_3_fu_158_p3() {
    tmp_3_fu_158_p3 = (!index_assign_cast2_fu_142_p1.read().is_01() || sc_biguint<32>(index_assign_cast2_fu_142_p1.read()).to_uint() >= 49)? sc_lv<1>(): r_V_reg_226.read().range(sc_biguint<32>(index_assign_cast2_fu_142_p1.read()).to_uint(), sc_biguint<32>(index_assign_cast2_fu_142_p1.read()).to_uint());
}

void dut_update_knn::thread_tmp_4_fu_190_p2() {
    tmp_4_fu_190_p2 = (!p_1_fu_40.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(p_1_fu_40.read() == ap_const_lv2_0);
}

void dut_update_knn::thread_tmp_5_cast_fu_196_p1() {
    tmp_5_cast_fu_196_p1 = esl_zext<6,2>(i1_reg_98.read());
}

void dut_update_knn::thread_tmp_6_fu_210_p2() {
    tmp_6_fu_210_p2 = (!min_distances_V_q0.read().is_01() || !p_s_reg_74.read().is_01())? sc_lv<1>(): (sc_biguint<6>(min_distances_V_q0.read()) > sc_biguint<6>(p_s_reg_74.read()));
}

void dut_update_knn::thread_tmp_fu_118_p3() {
    tmp_fu_118_p3 = esl_concat<4,2>(tmp_27.read(), ap_const_lv2_0);
}

void dut_update_knn::thread_train_inst_V_cast_fu_132_p1() {
    train_inst_V_cast_fu_132_p1 = esl_zext<49,48>(train_inst_V.read());
}

void dut_update_knn::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_175_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

