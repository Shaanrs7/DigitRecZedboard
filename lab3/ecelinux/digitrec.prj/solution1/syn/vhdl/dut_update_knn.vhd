-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_update_knn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    test_inst_V : IN STD_LOGIC_VECTOR (48 downto 0);
    train_inst_V : IN STD_LOGIC_VECTOR (47 downto 0);
    min_distances_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    min_distances_V_ce0 : OUT STD_LOGIC;
    min_distances_V_we0 : OUT STD_LOGIC;
    min_distances_V_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    min_distances_V_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    tmp_27 : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of dut_update_knn is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal tmp_1_fu_126_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_221 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_136_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_reg_226 : STD_LOGIC_VECTOR (48 downto 0);
    signal i_fu_152_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_51 : BOOLEAN;
    signal dist_V_fu_169_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_181_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_254 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_66 : BOOLEAN;
    signal tmp_4_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_259 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_distances_V_addr_reg_263 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_s_reg_74 : STD_LOGIC_VECTOR (5 downto 0);
    signal bvh_d_index_reg_87 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_reg_98 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_94 : BOOLEAN;
    signal tmp_2_cast_fu_205_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_1_fu_40 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_118_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_cast_cast_fu_114_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal train_inst_V_cast_fu_132_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal index_assign_cast2_fu_142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_158_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_cast_fu_165_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_cast_fu_196_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_200_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    bvh_d_index_reg_87_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_146_p2 = ap_const_lv1_0))) then 
                bvh_d_index_reg_87 <= i_fu_152_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                bvh_d_index_reg_87 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i1_reg_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i1_reg_98 <= i_1_reg_254;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_146_p2 = ap_const_lv1_0)))) then 
                i1_reg_98 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    p_1_fu_40_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_4_reg_259)) and not((ap_const_lv1_0 = tmp_6_fu_210_p2)))) then 
                p_1_fu_40(0) <= '1';
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_146_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_4_reg_259)) and (ap_const_lv1_0 = tmp_6_fu_210_p2)))) then 
                p_1_fu_40(0) <= '0';
            end if; 
        end if;
    end process;

    p_s_reg_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_146_p2 = ap_const_lv1_0))) then 
                p_s_reg_74 <= dist_V_fu_169_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                p_s_reg_74 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_1_reg_254 <= i_1_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond_fu_175_p2) and not((ap_const_lv1_0 = tmp_4_fu_190_p2)))) then
                min_distances_V_addr_reg_263 <= tmp_2_cast_fu_205_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                r_V_reg_226 <= r_V_fu_136_p2;
                tmp_1_reg_221 <= tmp_1_fu_126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond_fu_175_p2))) then
                tmp_4_reg_259 <= tmp_4_fu_190_p2;
            end if;
        end if;
    end process;
    p_1_fu_40(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_146_p2, exitcond_fu_175_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond1_fu_146_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond_fu_175_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2, exitcond_fu_175_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond_fu_175_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond_fu_175_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond_fu_175_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_21 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_51_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_51 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_66_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_66 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_94_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_94 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_51)
    begin
        if (ap_sig_51) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_66)
    begin
        if (ap_sig_66) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_94)
    begin
        if (ap_sig_94) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    dist_V_fu_169_p2 <= std_logic_vector(unsigned(p_s_reg_74) + unsigned(tmp_1_cast_fu_165_p1));
    exitcond1_fu_146_p2 <= "1" when (bvh_d_index_reg_87 = ap_const_lv6_31) else "0";
    exitcond_fu_175_p2 <= "1" when (i1_reg_98 = ap_const_lv2_3) else "0";
    i_1_fu_181_p2 <= std_logic_vector(unsigned(i1_reg_98) + unsigned(ap_const_lv2_1));
    i_fu_152_p2 <= std_logic_vector(unsigned(bvh_d_index_reg_87) + unsigned(ap_const_lv6_1));
    index_assign_cast2_fu_142_p1 <= std_logic_vector(resize(unsigned(bvh_d_index_reg_87),32));

    min_distances_V_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, min_distances_V_addr_reg_263, ap_sig_cseq_ST_st4_fsm_3, tmp_2_cast_fu_205_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            min_distances_V_address0 <= min_distances_V_addr_reg_263;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            min_distances_V_address0 <= tmp_2_cast_fu_205_p1(5 - 1 downto 0);
        else 
            min_distances_V_address0 <= "XXXXX";
        end if; 
    end process;


    min_distances_V_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            min_distances_V_ce0 <= ap_const_logic_1;
        else 
            min_distances_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    min_distances_V_d0 <= p_s_reg_74;

    min_distances_V_we0_assign_proc : process(tmp_4_reg_259, ap_sig_cseq_ST_st4_fsm_3, tmp_6_fu_210_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_4_reg_259)) and not((ap_const_lv1_0 = tmp_6_fu_210_p2))))) then 
            min_distances_V_we0 <= ap_const_logic_1;
        else 
            min_distances_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_fu_136_p2 <= (train_inst_V_cast_fu_132_p1 xor test_inst_V);
    tmp_1_cast_fu_165_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_158_p3),6));
    tmp_1_fu_126_p2 <= std_logic_vector(unsigned(tmp_fu_118_p3) - unsigned(tmp_27_cast_cast_fu_114_p1));
    tmp_27_cast_cast_fu_114_p1 <= std_logic_vector(resize(unsigned(tmp_27),6));
        tmp_2_cast_fu_205_p1 <= std_logic_vector(resize(signed(tmp_2_fu_200_p2),64));

    tmp_2_fu_200_p2 <= std_logic_vector(unsigned(tmp_1_reg_221) + unsigned(tmp_5_cast_fu_196_p1));
    tmp_3_fu_158_p3 <= r_V_reg_226(to_integer(unsigned(index_assign_cast2_fu_142_p1)) downto to_integer(unsigned(index_assign_cast2_fu_142_p1))) when (to_integer(unsigned(index_assign_cast2_fu_142_p1))>= 0 and to_integer(unsigned(index_assign_cast2_fu_142_p1))<=48) else "-";
    tmp_4_fu_190_p2 <= "1" when (p_1_fu_40 = ap_const_lv2_0) else "0";
    tmp_5_cast_fu_196_p1 <= std_logic_vector(resize(unsigned(i1_reg_98),6));
    tmp_6_fu_210_p2 <= "1" when (unsigned(min_distances_V_q0) > unsigned(p_s_reg_74)) else "0";
    tmp_fu_118_p3 <= (tmp_27 & ap_const_lv2_0);
    train_inst_V_cast_fu_132_p1 <= std_logic_vector(resize(unsigned(train_inst_V),49));
end behav;
