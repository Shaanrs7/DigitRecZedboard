-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_knn_vote is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    knn_set_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    knn_set_V_ce0 : OUT STD_LOGIC;
    knn_set_V_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of dut_knn_vote is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (27 downto 0) := "0000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (27 downto 0) := "0000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (27 downto 0) := "0000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (27 downto 0) := "0000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (27 downto 0) := "0001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (27 downto 0) := "0010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (27 downto 0) := "0100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_45 : BOOLEAN;
    signal reg_528 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_63 : BOOLEAN;
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_70 : BOOLEAN;
    signal i_2_fu_538_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_80 : BOOLEAN;
    signal k_1_fu_555_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_89 : BOOLEAN;
    signal i_3_fu_649_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_1281 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_98 : BOOLEAN;
    signal tmp_2_fu_667_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_1286 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond4_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_679_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_1294 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_113 : BOOLEAN;
    signal exitcond6_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_2_fu_705_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_2_reg_1307 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_127 : BOOLEAN;
    signal minArray_2_V_16_fu_851_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_16_reg_1312 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond9_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0166_5_fu_877_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0166_5_reg_1317 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_fu_905_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_1325 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_143 : BOOLEAN;
    signal tmp_21_fu_929_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_21_reg_1330 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond5_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal voteArray_V_addr_10_reg_1336 : STD_LOGIC_VECTOR (3 downto 0);
    signal sumArr_0_V_addr_1_reg_1342 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_2_fu_941_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_2_reg_1350 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_161 : BOOLEAN;
    signal exitcond8_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_3_fu_967_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_3_reg_1363 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_175 : BOOLEAN;
    signal tmp_16_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1373 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_1_fu_1016_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_1_reg_1383 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_193 : BOOLEAN;
    signal exitcond11_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_1049_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_1396 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_207 : BOOLEAN;
    signal exitcond7_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_fu_1066_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_221 : BOOLEAN;
    signal i_6_fu_1078_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_reg_1417 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_230 : BOOLEAN;
    signal exitcond10_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0182_1_fu_1122_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_246 : BOOLEAN;
    signal p_0174_1_fu_1130_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_7_fu_1144_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_7_reg_1445 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_257 : BOOLEAN;
    signal tmp_7_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0158_2_fu_1171_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0158_2_reg_1461 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0186_2_fu_1205_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_275 : BOOLEAN;
    signal p_0182_4_fu_1212_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal voteArray_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal voteArray_V_ce0 : STD_LOGIC;
    signal voteArray_V_we0 : STD_LOGIC;
    signal voteArray_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal voteArray_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal voteArray_V_ce1 : STD_LOGIC;
    signal voteArray_V_we1 : STD_LOGIC;
    signal voteArray_V_d1 : STD_LOGIC_VECTOR (5 downto 0);
    signal voteArray_V_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sumArr_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sumArr_0_V_ce0 : STD_LOGIC;
    signal sumArr_0_V_we0 : STD_LOGIC;
    signal sumArr_0_V_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sumArr_0_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_259 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_315 : BOOLEAN;
    signal k_reg_270 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond3_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i5_reg_281 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_292 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0166_2_reg_303 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_342 : BOOLEAN;
    signal k6_reg_314 : STD_LOGIC_VECTOR (1 downto 0);
    signal i7_reg_325 : STD_LOGIC_VECTOR (3 downto 0);
    signal j8_reg_336 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0162_2_reg_347 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_365 : BOOLEAN;
    signal tmp_20_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k9_reg_367 : STD_LOGIC_VECTOR (1 downto 0);
    signal l_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_384 : BOOLEAN;
    signal p_s_reg_393 : STD_LOGIC_VECTOR (5 downto 0);
    signal i4_reg_405 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_4_reg_416 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_5_reg_428 : STD_LOGIC_VECTOR (5 downto 0);
    signal val_assign_1_reg_440 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_2_reg_452 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0182_2_reg_464 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_3_reg_476 : STD_LOGIC_VECTOR (3 downto 0);
    signal val_assign_reg_487 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0182_5_reg_499 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_435 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_446 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_457 : BOOLEAN;
    signal tmp_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_cast_fu_956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_cast_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal minArray_0_V_fu_64 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_0_V_1_fu_605_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_1_V_fu_68 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_1_V_1_fu_597_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_fu_72 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_1_fu_581_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_3_fu_76 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_4_fu_80 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_14_fu_835_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_2_fu_84 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_6_fu_819_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_521 : BOOLEAN;
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_535 : BOOLEAN;
    signal tmp_19_fu_997_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_1036_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_567_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp6_fu_589_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_659_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_cast_fu_655_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_cast_fu_685_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_23_fu_689_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_717_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp1_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal minArray_2_V_8_fu_747_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_9_fu_769_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp19_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal minArray_2_V_5_fu_761_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_12_fu_811_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_10_fu_777_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_13_fu_827_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_11_fu_785_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minArray_2_V_15_fu_843_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp4_fu_859_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp10_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_863_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_921_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_cast_fu_917_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_cast_fu_947_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_25_fu_951_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_fu_979_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_21_cast_fu_1022_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_fu_1026_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxIndex_V_1_fu_1102_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxIndex_V_1_4_fu_1106_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal minSum_V_5_fu_1114_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_16_fu_1162_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxIndex_V_fu_1185_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_2_maxVal_V_fu_1189_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0182_2_maxIndex_V_fu_1197_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_835 : BOOLEAN;
    signal tmp_26_fu_1219_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (27 downto 0);

    component dut_mux_3to1_sel2_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        din3 : IN STD_LOGIC_VECTOR (5 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dut_knn_vote_voteArray_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (5 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dut_knn_vote_sumArr_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    voteArray_V_U : component dut_knn_vote_voteArray_V
    generic map (
        DataWidth => 6,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => voteArray_V_address0,
        ce0 => voteArray_V_ce0,
        we0 => voteArray_V_we0,
        d0 => ap_const_lv6_0,
        q0 => voteArray_V_q0,
        address1 => voteArray_V_address1,
        ce1 => voteArray_V_ce1,
        we1 => voteArray_V_we1,
        d1 => voteArray_V_d1,
        q1 => voteArray_V_q1);

    sumArr_0_V_U : component dut_knn_vote_sumArr_0_V
    generic map (
        DataWidth => 6,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sumArr_0_V_address0,
        ce0 => sumArr_0_V_ce0,
        we0 => sumArr_0_V_we0,
        d0 => sumArr_0_V_d0,
        q0 => sumArr_0_V_q0);

    dut_mux_3to1_sel2_6_1_U5 : component dut_mux_3to1_sel2_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        din3_WIDTH => 6,
        din4_WIDTH => 2,
        dout_WIDTH => 6)
    port map (
        din1 => minArray_2_V_3_fu_76,
        din2 => minArray_2_V_4_fu_80,
        din3 => minArray_2_V_2_fu_84,
        din4 => k6_reg_314,
        dout => tmp_18_fu_717_p5);

    dut_mux_3to1_sel2_6_1_U6 : component dut_mux_3to1_sel2_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        din3_WIDTH => 6,
        din4_WIDTH => 2,
        dout_WIDTH => 6)
    port map (
        din1 => minArray_2_V_3_fu_76,
        din2 => minArray_2_V_4_fu_80,
        din3 => minArray_2_V_2_fu_84,
        din4 => k9_reg_367,
        dout => tmp_24_fu_979_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
                    ap_return_preg <= tmp_26_fu_1219_p1;
                end if; 
            end if;
        end if;
    end process;


    i4_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond5_fu_899_p2)))) then 
                i4_reg_405 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                i4_reg_405 <= i_4_reg_1396;
            end if; 
        end if;
    end process;

    i5_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = exitcond6_fu_673_p2)))) then 
                i5_reg_281 <= i_3_reg_1281;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_549_p2)))) then 
                i5_reg_281 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i7_reg_325_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond8_fu_935_p2)))) then 
                i7_reg_325 <= i_5_reg_1325;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((exitcond4_fu_643_p2 = ap_const_lv1_0)))) then 
                i7_reg_325 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                i_reg_259 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond2_fu_532_p2))) then 
                i_reg_259 <= i_2_fu_538_p2;
            end if; 
        end if;
    end process;

    j8_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_lv1_0 = exitcond1_fu_961_p2)))) then 
                j8_reg_336 <= j_2_reg_1350;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = exitcond5_fu_899_p2))) then 
                j8_reg_336 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = exitcond9_fu_699_p2)))) then 
                j_reg_292 <= j_1_reg_1294;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (exitcond4_fu_643_p2 = ap_const_lv1_0))) then 
                j_reg_292 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k6_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                k6_reg_314 <= k_2_reg_1307;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                k6_reg_314 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k9_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond1_fu_961_p2) and (ap_const_lv1_0 = tmp_10_fu_973_p2))) then 
                k9_reg_367 <= k_3_fu_967_p2;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (ap_const_lv1_0 = tmp_20_fu_1004_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((ap_const_lv1_0 = exitcond11_fu_1010_p2))))) then 
                k9_reg_367 <= k_3_reg_1363;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                k9_reg_367 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond2_fu_532_p2)))) then 
                k_reg_270 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond3_fu_549_p2))) then 
                k_reg_270 <= k_1_fu_555_p2;
            end if; 
        end if;
    end process;

    l_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_20_fu_1004_p2)))) then 
                l_reg_382 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
                l_reg_382 <= l_1_reg_1383;
            end if; 
        end if;
    end process;

    minArray_2_V_2_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = exitcond9_fu_699_p2))) then 
                minArray_2_V_2_fu_84 <= minArray_2_V_6_fu_819_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_549_p2)))) then 
                minArray_2_V_2_fu_84 <= minArray_2_V_fu_72;
            end if; 
        end if;
    end process;

    minArray_2_V_3_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                minArray_2_V_3_fu_76 <= minArray_2_V_16_reg_1312;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_549_p2)))) then 
                minArray_2_V_3_fu_76 <= minArray_0_V_fu_64;
            end if; 
        end if;
    end process;

    minArray_2_V_4_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = exitcond9_fu_699_p2))) then 
                minArray_2_V_4_fu_80 <= minArray_2_V_14_fu_835_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_549_p2)))) then 
                minArray_2_V_4_fu_80 <= minArray_1_V_fu_68;
            end if; 
        end if;
    end process;

    p_0162_2_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((ap_const_lv1_0 = exitcond11_fu_1010_p2)))) then 
                p_0162_2_reg_347 <= ap_const_lv2_1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond1_fu_961_p2) and (ap_const_lv1_0 = tmp_10_fu_973_p2))) then 
                p_0162_2_reg_347 <= p_0162_2_reg_347;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and (ap_const_lv1_0 = tmp_20_fu_1004_p2)))) then 
                p_0162_2_reg_347 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    p_0166_2_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                p_0166_2_reg_303 <= p_0166_5_reg_1317;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                p_0166_2_reg_303 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_0182_2_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)) and not((ap_const_lv1_0 = tmp_3_fu_1060_p2)))) then 
                p_0182_2_reg_464 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
                p_0182_2_reg_464 <= p_0182_4_fu_1212_p3;
            end if; 
        end if;
    end process;

    p_0182_5_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) and not((ap_const_lv1_0 = exitcond10_fu_1072_p2)))) then 
                p_0182_5_reg_499 <= p_4_reg_416;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) and not((ap_const_lv1_0 = exitcond_fu_1138_p2)))) then 
                p_0182_5_reg_499 <= p_0182_2_reg_464;
            end if; 
        end if;
    end process;

    p_2_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)) and not((ap_const_lv1_0 = tmp_3_fu_1060_p2)))) then 
                p_2_reg_452 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
                p_2_reg_452 <= p_0186_2_fu_1205_p3;
            end if; 
        end if;
    end process;

    p_3_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)) and not((ap_const_lv1_0 = tmp_3_fu_1060_p2)))) then 
                p_3_reg_476 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
                p_3_reg_476 <= p_0158_2_reg_1461;
            end if; 
        end if;
    end process;

    p_4_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and (ap_const_lv1_0 = tmp_3_fu_1060_p2) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)))) then 
                p_4_reg_416 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
                p_4_reg_416 <= p_0182_1_fu_1122_p3;
            end if; 
        end if;
    end process;

    p_5_reg_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and (ap_const_lv1_0 = tmp_3_fu_1060_p2) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)))) then 
                p_5_reg_428 <= ap_const_lv6_3F;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
                p_5_reg_428 <= p_0174_1_fu_1130_p3;
            end if; 
        end if;
    end process;

    p_s_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = exitcond5_fu_899_p2)))) then 
                p_s_reg_393 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
                p_s_reg_393 <= sum_V_fu_1066_p2;
            end if; 
        end if;
    end process;

    val_assign_1_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and (ap_const_lv1_0 = tmp_3_fu_1060_p2) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)))) then 
                val_assign_1_reg_440 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
                val_assign_1_reg_440 <= i_6_reg_1417;
            end if; 
        end if;
    end process;

    val_assign_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)) and not((ap_const_lv1_0 = tmp_3_fu_1060_p2)))) then 
                val_assign_reg_487 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
                val_assign_reg_487 <= i_7_reg_1445;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                i_3_reg_1281 <= i_3_fu_649_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then
                i_4_reg_1396 <= i_4_fu_1049_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                i_5_reg_1325 <= i_5_fu_905_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then
                i_6_reg_1417 <= i_6_fu_1078_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then
                i_7_reg_1445 <= i_7_fu_1144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                j_1_reg_1294 <= j_1_fu_679_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                j_2_reg_1350 <= j_2_fu_941_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                k_2_reg_1307 <= k_2_fu_705_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                k_3_reg_1363 <= k_3_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                l_1_reg_1383 <= l_1_fu_1016_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond3_fu_549_p2))) then
                minArray_0_V_fu_64 <= minArray_0_V_1_fu_605_p3;
                minArray_1_V_fu_68 <= minArray_1_V_1_fu_597_p3;
                minArray_2_V_fu_72 <= minArray_2_V_1_fu_581_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = exitcond9_fu_699_p2))) then
                minArray_2_V_16_reg_1312 <= minArray_2_V_16_fu_851_p3;
                p_0166_5_reg_1317 <= p_0166_5_fu_877_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) and (ap_const_lv1_0 = exitcond_fu_1138_p2))) then
                p_0158_2_reg_1461 <= p_0158_2_fu_1171_p3;
                tmp_7_reg_1450 <= tmp_7_fu_1150_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then
                reg_528 <= knn_set_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = exitcond5_fu_899_p2))) then
                sumArr_0_V_addr_1_reg_1342 <= tmp_1_fu_911_p1(4 - 1 downto 0);
                tmp_21_reg_1330 <= tmp_21_fu_929_p2;
                voteArray_V_addr_10_reg_1336 <= tmp_1_fu_911_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = exitcond1_fu_961_p2) and not((ap_const_lv1_0 = tmp_10_fu_973_p2)))) then
                tmp_16_reg_1373 <= tmp_16_fu_991_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (exitcond4_fu_643_p2 = ap_const_lv1_0))) then
                tmp_2_reg_1286 <= tmp_2_fu_667_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond4_fu_643_p2, exitcond6_fu_673_p2, exitcond9_fu_699_p2, exitcond5_fu_899_p2, exitcond8_fu_935_p2, exitcond1_fu_961_p2, tmp_10_fu_973_p2, exitcond11_fu_1010_p2, exitcond7_fu_1043_p2, exitcond10_fu_1072_p2, exitcond_fu_1138_p2, exitcond2_fu_532_p2, exitcond3_fu_549_p2, tmp_20_fu_1004_p2, tmp_3_fu_1060_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_532_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_549_p2))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if ((exitcond4_fu_643_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st9_fsm_8 => 
                if ((ap_const_lv1_0 = exitcond6_fu_673_p2)) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if ((ap_const_lv1_0 = exitcond9_fu_699_p2)) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st13_fsm_12 => 
                if ((ap_const_lv1_0 = exitcond5_fu_899_p2)) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                end if;
            when ap_ST_st14_fsm_13 => 
                if ((ap_const_lv1_0 = exitcond8_fu_935_p2)) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                if (((ap_const_lv1_0 = exitcond1_fu_961_p2) and not((ap_const_lv1_0 = tmp_10_fu_973_p2)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                elsif (((ap_const_lv1_0 = exitcond1_fu_961_p2) and (ap_const_lv1_0 = tmp_10_fu_973_p2))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                if (not((ap_const_lv1_0 = tmp_20_fu_1004_p2))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st20_fsm_19 => 
                if ((ap_const_lv1_0 = exitcond11_fu_1010_p2)) then
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st22_fsm_21 => 
                if ((not((ap_const_lv1_0 = exitcond7_fu_1043_p2)) and not((ap_const_lv1_0 = tmp_3_fu_1060_p2)))) then
                    ap_NS_fsm <= ap_ST_st26_fsm_25;
                elsif (((ap_const_lv1_0 = tmp_3_fu_1060_p2) and not((ap_const_lv1_0 = exitcond7_fu_1043_p2)))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                end if;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st24_fsm_23 => 
                if (not((ap_const_lv1_0 = exitcond10_fu_1072_p2))) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st25_fsm_24;
                end if;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st26_fsm_25 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1138_p2))) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                end if;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_sig_cseq_ST_st28_fsm_27, tmp_26_fu_1219_p1, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            ap_return <= tmp_26_fu_1219_p1;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_113_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_113 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_127_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_127 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_143_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_143 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_161_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_161 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_175_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_175 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_193_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_193 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_207 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_221_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_221 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_230 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_246_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_246 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_257_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_257 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_275_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_275 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    ap_sig_315_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_315 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_342_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_342 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_365_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_365 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_384_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_384 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_435_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_435 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_446_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_446 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_45_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_45 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_457_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_457 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_521_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_521 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_535_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_535 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_63_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_63 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_70_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_70 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_80_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_80 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_835_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_835 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    ap_sig_89_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_89 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_98_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_98 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_63)
    begin
        if (ap_sig_63) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_127)
    begin
        if (ap_sig_127) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_342)
    begin
        if (ap_sig_342) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_143)
    begin
        if (ap_sig_143) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_161)
    begin
        if (ap_sig_161) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_70)
    begin
        if (ap_sig_70) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_175)
    begin
        if (ap_sig_175) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_535)
    begin
        if (ap_sig_535) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_521)
    begin
        if (ap_sig_521) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_365)
    begin
        if (ap_sig_365) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_45)
    begin
        if (ap_sig_45) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_193)
    begin
        if (ap_sig_193) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_384)
    begin
        if (ap_sig_384) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_207)
    begin
        if (ap_sig_207) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_221)
    begin
        if (ap_sig_221) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st24_fsm_23_assign_proc : process(ap_sig_230)
    begin
        if (ap_sig_230) then 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_246)
    begin
        if (ap_sig_246) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_257)
    begin
        if (ap_sig_257) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_275)
    begin
        if (ap_sig_275) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_835)
    begin
        if (ap_sig_835) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_435)
    begin
        if (ap_sig_435) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_446)
    begin
        if (ap_sig_446) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_457)
    begin
        if (ap_sig_457) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_315)
    begin
        if (ap_sig_315) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_80)
    begin
        if (ap_sig_80) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_89)
    begin
        if (ap_sig_89) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_98)
    begin
        if (ap_sig_98) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_113)
    begin
        if (ap_sig_113) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond10_fu_1072_p2 <= "1" when (val_assign_1_reg_440 = ap_const_lv4_A) else "0";
    exitcond11_fu_1010_p2 <= "1" when (l_reg_382 = ap_const_lv2_3) else "0";
    exitcond1_fu_961_p2 <= "1" when (k9_reg_367 = ap_const_lv2_3) else "0";
    exitcond2_fu_532_p2 <= "1" when (i_reg_259 = ap_const_lv4_A) else "0";
    exitcond3_fu_549_p2 <= "1" when (k_reg_270 = ap_const_lv2_3) else "0";
    exitcond4_fu_643_p2 <= "1" when (i5_reg_281 = ap_const_lv4_A) else "0";
    exitcond5_fu_899_p2 <= "1" when (i7_reg_325 = ap_const_lv4_A) else "0";
    exitcond6_fu_673_p2 <= "1" when (j_reg_292 = ap_const_lv2_3) else "0";
    exitcond7_fu_1043_p2 <= "1" when (i4_reg_405 = ap_const_lv4_A) else "0";
    exitcond8_fu_935_p2 <= "1" when (j8_reg_336 = ap_const_lv2_3) else "0";
    exitcond9_fu_699_p2 <= "1" when (k6_reg_314 = ap_const_lv2_3) else "0";
    exitcond_fu_1138_p2 <= "1" when (val_assign_reg_487 = ap_const_lv4_A) else "0";
    i_2_fu_538_p2 <= std_logic_vector(unsigned(i_reg_259) + unsigned(ap_const_lv4_1));
    i_3_fu_649_p2 <= std_logic_vector(unsigned(i5_reg_281) + unsigned(ap_const_lv4_1));
    i_4_fu_1049_p2 <= std_logic_vector(unsigned(i4_reg_405) + unsigned(ap_const_lv4_1));
    i_5_fu_905_p2 <= std_logic_vector(unsigned(i7_reg_325) + unsigned(ap_const_lv4_1));
    i_6_fu_1078_p2 <= std_logic_vector(unsigned(val_assign_1_reg_440) + unsigned(ap_const_lv4_1));
    i_7_fu_1144_p2 <= std_logic_vector(unsigned(val_assign_reg_487) + unsigned(ap_const_lv4_1));
    j_1_fu_679_p2 <= std_logic_vector(unsigned(j_reg_292) + unsigned(ap_const_lv2_1));
    j_2_fu_941_p2 <= std_logic_vector(unsigned(j8_reg_336) + unsigned(ap_const_lv2_1));
    k_1_fu_555_p2 <= std_logic_vector(unsigned(k_reg_270) + unsigned(ap_const_lv2_1));
    k_2_fu_705_p2 <= std_logic_vector(unsigned(k6_reg_314) + unsigned(ap_const_lv2_1));
    k_3_fu_967_p2 <= std_logic_vector(unsigned(k9_reg_367) + unsigned(ap_const_lv2_1));

    knn_set_V_address0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19, tmp_28_cast_fu_694_p1, tmp_29_cast_fu_956_p1, tmp_30_cast_fu_1031_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            knn_set_V_address0 <= tmp_30_cast_fu_1031_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            knn_set_V_address0 <= tmp_29_cast_fu_956_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            knn_set_V_address0 <= tmp_28_cast_fu_694_p1(5 - 1 downto 0);
        else 
            knn_set_V_address0 <= "XXXXX";
        end if; 
    end process;


    knn_set_V_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            knn_set_V_ce0 <= ap_const_logic_1;
        else 
            knn_set_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    l_1_fu_1016_p2 <= std_logic_vector(unsigned(l_reg_382) + unsigned(ap_const_lv2_1));
    maxIndex_V_1_4_fu_1106_p3 <= 
        maxIndex_V_1_fu_1102_p1 when (tmp_17_fu_1096_p2(0) = '1') else 
        p_4_reg_416;
    maxIndex_V_1_fu_1102_p1 <= std_logic_vector(resize(unsigned(val_assign_1_reg_440),6));
    maxIndex_V_fu_1185_p1 <= std_logic_vector(resize(unsigned(val_assign_reg_487),6));
    minArray_0_V_1_fu_605_p3 <= 
        ap_const_lv6_32 when (sel_tmp3_fu_575_p2(0) = '1') else 
        minArray_0_V_fu_64;
    minArray_1_V_1_fu_597_p3 <= 
        minArray_1_V_fu_68 when (sel_tmp3_fu_575_p2(0) = '1') else 
        sel_tmp6_fu_589_p3;
    minArray_2_V_10_fu_777_p3 <= 
        minArray_2_V_4_fu_80 when (sel_tmp5_fu_755_p2(0) = '1') else 
        minArray_2_V_9_fu_769_p3;
    minArray_2_V_11_fu_785_p3 <= 
        reg_528 when (sel_tmp5_fu_755_p2(0) = '1') else 
        minArray_2_V_3_fu_76;
    minArray_2_V_12_fu_811_p3 <= 
        minArray_2_V_5_fu_761_p3 when (sel_tmp9_fu_805_p2(0) = '1') else 
        minArray_2_V_2_fu_84;
    minArray_2_V_13_fu_827_p3 <= 
        minArray_2_V_10_fu_777_p3 when (sel_tmp9_fu_805_p2(0) = '1') else 
        minArray_2_V_4_fu_80;
    minArray_2_V_14_fu_835_p3 <= 
        minArray_2_V_13_fu_827_p3 when (tmp_6_fu_711_p2(0) = '1') else 
        minArray_2_V_4_fu_80;
    minArray_2_V_15_fu_843_p3 <= 
        minArray_2_V_11_fu_785_p3 when (sel_tmp9_fu_805_p2(0) = '1') else 
        minArray_2_V_3_fu_76;
    minArray_2_V_16_fu_851_p3 <= 
        minArray_2_V_15_fu_843_p3 when (tmp_6_fu_711_p2(0) = '1') else 
        minArray_2_V_3_fu_76;
    minArray_2_V_1_fu_581_p3 <= 
        minArray_2_V_fu_72 when (sel_tmp3_fu_575_p2(0) = '1') else 
        sel_tmp2_fu_567_p3;
    minArray_2_V_5_fu_761_p3 <= 
        minArray_2_V_2_fu_84 when (sel_tmp5_fu_755_p2(0) = '1') else 
        minArray_2_V_8_fu_747_p3;
    minArray_2_V_6_fu_819_p3 <= 
        minArray_2_V_12_fu_811_p3 when (tmp_6_fu_711_p2(0) = '1') else 
        minArray_2_V_2_fu_84;
    minArray_2_V_8_fu_747_p3 <= 
        minArray_2_V_2_fu_84 when (sel_tmp1_fu_741_p2(0) = '1') else 
        reg_528;
    minArray_2_V_9_fu_769_p3 <= 
        reg_528 when (sel_tmp1_fu_741_p2(0) = '1') else 
        minArray_2_V_4_fu_80;
    minSum_V_5_fu_1114_p3 <= 
        sumArr_0_V_q0 when (tmp_17_fu_1096_p2(0) = '1') else 
        p_5_reg_428;
    p_0158_2_fu_1171_p3 <= 
        p_s_16_fu_1162_p1 when (tmp_7_fu_1150_p2(0) = '1') else 
        p_3_reg_476;
    p_0166_5_fu_877_p3 <= 
        ap_const_lv4_1 when (sel_tmp10_fu_871_p2(0) = '1') else 
        sel_tmp7_fu_863_p3;
    p_0174_1_fu_1130_p3 <= 
        minSum_V_5_fu_1114_p3 when (tmp_12_fu_1090_p2(0) = '1') else 
        p_5_reg_428;
    p_0182_1_fu_1122_p3 <= 
        maxIndex_V_1_4_fu_1106_p3 when (tmp_12_fu_1090_p2(0) = '1') else 
        p_4_reg_416;
    p_0182_2_maxIndex_V_fu_1197_p3 <= 
        p_0182_2_reg_464 when (tmp_15_fu_1179_p2(0) = '1') else 
        maxIndex_V_fu_1185_p1;
    p_0182_4_fu_1212_p3 <= 
        p_0182_2_maxIndex_V_fu_1197_p3 when (tmp_7_reg_1450(0) = '1') else 
        p_0182_2_reg_464;
    p_0186_2_fu_1205_p3 <= 
        p_2_maxVal_V_fu_1189_p3 when (tmp_7_reg_1450(0) = '1') else 
        p_2_reg_452;
    p_2_maxVal_V_fu_1189_p3 <= 
        p_2_reg_452 when (tmp_15_fu_1179_p2(0) = '1') else 
        voteArray_V_q0;
    p_s_16_fu_1162_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_1156_p2),4));
    sel_tmp10_fu_871_p2 <= (tmp_6_fu_711_p2 and tmp_8_fu_729_p2);
    sel_tmp1_fu_741_p2 <= "1" when (k6_reg_314 = ap_const_lv2_1) else "0";
    sel_tmp2_fu_567_p3 <= 
        minArray_2_V_fu_72 when (sel_tmp_fu_561_p2(0) = '1') else 
        ap_const_lv6_32;
    sel_tmp3_fu_575_p2 <= "1" when (k_reg_270 = ap_const_lv2_0) else "0";
    sel_tmp4_fu_859_p1 <= std_logic_vector(resize(unsigned(sel_tmp9_fu_805_p2),4));
    sel_tmp5_fu_755_p2 <= "1" when (k6_reg_314 = ap_const_lv2_0) else "0";
    sel_tmp6_fu_589_p3 <= 
        ap_const_lv6_32 when (sel_tmp_fu_561_p2(0) = '1') else 
        minArray_1_V_fu_68;
    sel_tmp7_fu_863_p3 <= 
        sel_tmp4_fu_859_p1 when (tmp_6_fu_711_p2(0) = '1') else 
        p_0166_2_reg_303;
    sel_tmp8_fu_793_p2 <= (tmp_8_fu_729_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_805_p2 <= (tmp19_fu_799_p2 and tmp_6_fu_711_p2);
    sel_tmp_fu_561_p2 <= "1" when (k_reg_270 = ap_const_lv2_1) else "0";

    sumArr_0_V_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, sumArr_0_V_addr_1_reg_1342, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st21_fsm_20, tmp_fu_544_p1, tmp_4_fu_1055_p1, tmp_9_fu_1084_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            sumArr_0_V_address0 <= tmp_fu_544_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            sumArr_0_V_address0 <= tmp_9_fu_1084_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            sumArr_0_V_address0 <= tmp_4_fu_1055_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            sumArr_0_V_address0 <= sumArr_0_V_addr_1_reg_1342;
        else 
            sumArr_0_V_address0 <= "XXXX";
        end if; 
    end process;


    sumArr_0_V_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            sumArr_0_V_ce0 <= ap_const_logic_1;
        else 
            sumArr_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumArr_0_V_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st21_fsm_20, tmp_22_fu_1036_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sumArr_0_V_d0 <= tmp_22_fu_1036_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            sumArr_0_V_d0 <= ap_const_lv6_0;
        else 
            sumArr_0_V_d0 <= "XXXXXX";
        end if; 
    end process;


    sumArr_0_V_we0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, exitcond2_fu_532_p2, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond2_fu_532_p2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            sumArr_0_V_we0 <= ap_const_logic_1;
        else 
            sumArr_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_V_fu_1066_p2 <= std_logic_vector(unsigned(sumArr_0_V_q0) + unsigned(p_s_reg_393));
    tmp19_fu_799_p2 <= (tmp_11_fu_735_p2 and sel_tmp8_fu_793_p2);
    tmp_10_fu_973_p2 <= "1" when (p_0162_2_reg_347 = ap_const_lv2_0) else "0";
    tmp_11_fu_735_p2 <= "1" when (unsigned(reg_528) < unsigned(tmp_18_fu_717_p5)) else "0";
    tmp_12_fu_1090_p2 <= "1" when (voteArray_V_q1 = ap_const_lv6_3) else "0";
    tmp_13_fu_1156_p2 <= "1" when (p_2_reg_452 = ap_const_lv6_3) else "0";
    tmp_14_fu_1166_p1 <= std_logic_vector(resize(unsigned(val_assign_reg_487),64));
    tmp_15_fu_1179_p2 <= "1" when (unsigned(voteArray_V_q0) < unsigned(p_2_reg_452)) else "0";
    tmp_16_fu_991_p2 <= "1" when (reg_528 = tmp_24_fu_979_p5) else "0";
    tmp_17_fu_1096_p2 <= "1" when (unsigned(sumArr_0_V_q0) < unsigned(p_5_reg_428)) else "0";
    tmp_19_fu_997_p2 <= std_logic_vector(unsigned(voteArray_V_q0) + unsigned(ap_const_lv6_1));
    tmp_1_cast_fu_917_p1 <= std_logic_vector(resize(unsigned(i7_reg_325),6));
    tmp_1_fu_911_p1 <= std_logic_vector(resize(unsigned(i7_reg_325),64));
    tmp_20_fu_1004_p2 <= "1" when (voteArray_V_q0 = ap_const_lv6_3) else "0";
    tmp_21_cast_fu_1022_p1 <= std_logic_vector(resize(unsigned(l_reg_382),6));
    tmp_21_fu_929_p2 <= std_logic_vector(unsigned(tmp_5_fu_921_p3) - unsigned(tmp_1_cast_fu_917_p1));
    tmp_22_fu_1036_p2 <= std_logic_vector(unsigned(sumArr_0_V_q0) + unsigned(knn_set_V_q0));
    tmp_23_fu_689_p2 <= std_logic_vector(unsigned(tmp_2_reg_1286) + unsigned(tmp_2_cast_fu_685_p1));
    tmp_25_fu_951_p2 <= std_logic_vector(unsigned(tmp_21_reg_1330) + unsigned(tmp_5_cast_fu_947_p1));
    tmp_26_fu_1219_p1 <= p_0182_5_reg_499(4 - 1 downto 0);
    tmp_27_fu_1026_p2 <= std_logic_vector(unsigned(tmp_21_reg_1330) + unsigned(tmp_21_cast_fu_1022_p1));
        tmp_28_cast_fu_694_p1 <= std_logic_vector(resize(signed(tmp_23_fu_689_p2),64));

        tmp_29_cast_fu_956_p1 <= std_logic_vector(resize(signed(tmp_25_fu_951_p2),64));

    tmp_2_cast_fu_685_p1 <= std_logic_vector(resize(unsigned(j_reg_292),6));
    tmp_2_fu_667_p2 <= std_logic_vector(unsigned(tmp_s_fu_659_p3) - unsigned(tmp_cast_fu_655_p1));
        tmp_30_cast_fu_1031_p1 <= std_logic_vector(resize(signed(tmp_27_fu_1026_p2),64));

    tmp_3_fu_1060_p2 <= "1" when (p_s_reg_393 = ap_const_lv6_0) else "0";
    tmp_4_fu_1055_p1 <= std_logic_vector(resize(unsigned(i4_reg_405),64));
    tmp_5_cast_fu_947_p1 <= std_logic_vector(resize(unsigned(j8_reg_336),6));
    tmp_5_fu_921_p3 <= (i7_reg_325 & ap_const_lv2_0);
    tmp_6_fu_711_p2 <= "1" when (p_0166_2_reg_303 = ap_const_lv4_0) else "0";
    tmp_7_fu_1150_p2 <= "1" when (p_3_reg_476 = ap_const_lv4_0) else "0";
    tmp_8_fu_729_p2 <= "1" when (reg_528 = tmp_18_fu_717_p5) else "0";
    tmp_9_fu_1084_p1 <= std_logic_vector(resize(unsigned(val_assign_1_reg_440),64));
    tmp_cast_fu_655_p1 <= std_logic_vector(resize(unsigned(i5_reg_281),6));
    tmp_fu_544_p1 <= std_logic_vector(resize(unsigned(i_reg_259),64));
    tmp_s_fu_659_p3 <= (i5_reg_281 & ap_const_lv2_0);

    voteArray_V_address0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, voteArray_V_addr_10_reg_1336, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, tmp_14_fu_1166_p1, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            voteArray_V_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            voteArray_V_address0 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            voteArray_V_address0 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            voteArray_V_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            voteArray_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            voteArray_V_address0 <= tmp_14_fu_1166_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            voteArray_V_address0 <= voteArray_V_addr_10_reg_1336;
        else 
            voteArray_V_address0 <= "XXXX";
        end if; 
    end process;


    voteArray_V_address1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, voteArray_V_addr_10_reg_1336, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, tmp_9_fu_1084_p1, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            voteArray_V_address1 <= voteArray_V_addr_10_reg_1336;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            voteArray_V_address1 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            voteArray_V_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            voteArray_V_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            voteArray_V_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            voteArray_V_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            voteArray_V_address1 <= tmp_9_fu_1084_p1(4 - 1 downto 0);
        else 
            voteArray_V_address1 <= "XXXX";
        end if; 
    end process;


    voteArray_V_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st18_fsm_17)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17))) then 
            voteArray_V_ce0 <= ap_const_logic_1;
        else 
            voteArray_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    voteArray_V_ce1_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            voteArray_V_ce1 <= ap_const_logic_1;
        else 
            voteArray_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    voteArray_V_d1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st17_fsm_16, tmp_19_fu_997_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            voteArray_V_d1 <= tmp_19_fu_997_p2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            voteArray_V_d1 <= ap_const_lv6_0;
        else 
            voteArray_V_d1 <= "XXXXXX";
        end if; 
    end process;


    voteArray_V_we0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            voteArray_V_we0 <= ap_const_logic_1;
        else 
            voteArray_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    voteArray_V_we1_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, tmp_16_reg_1373, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = tmp_16_reg_1373))))) then 
            voteArray_V_we1 <= ap_const_logic_1;
        else 
            voteArray_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
