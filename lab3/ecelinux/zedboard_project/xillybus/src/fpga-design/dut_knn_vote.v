// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_knn_vote (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        knn_set_V_address0,
        knn_set_V_ce0,
        knn_set_V_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 28'b1;
parameter    ap_ST_st2_fsm_1 = 28'b10;
parameter    ap_ST_st3_fsm_2 = 28'b100;
parameter    ap_ST_st4_fsm_3 = 28'b1000;
parameter    ap_ST_st5_fsm_4 = 28'b10000;
parameter    ap_ST_st6_fsm_5 = 28'b100000;
parameter    ap_ST_st7_fsm_6 = 28'b1000000;
parameter    ap_ST_st8_fsm_7 = 28'b10000000;
parameter    ap_ST_st9_fsm_8 = 28'b100000000;
parameter    ap_ST_st10_fsm_9 = 28'b1000000000;
parameter    ap_ST_st11_fsm_10 = 28'b10000000000;
parameter    ap_ST_st12_fsm_11 = 28'b100000000000;
parameter    ap_ST_st13_fsm_12 = 28'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 28'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 28'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 28'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 28'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 28'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 28'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 28'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 28'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 28'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 28'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 28'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 28'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 28'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 28'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 28'b1000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv6_32 = 6'b110010;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv32_1B = 32'b11011;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] knn_set_V_address0;
output   knn_set_V_ce0;
input  [5:0] knn_set_V_q0;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] knn_set_V_address0;
reg knn_set_V_ce0;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_45;
reg   [5:0] reg_528;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_63;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_70;
wire   [3:0] i_2_fu_538_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_80;
wire   [1:0] k_1_fu_555_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_89;
wire   [3:0] i_3_fu_649_p2;
reg   [3:0] i_3_reg_1281;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_98;
wire   [5:0] tmp_2_fu_667_p2;
reg   [5:0] tmp_2_reg_1286;
wire   [0:0] exitcond4_fu_643_p2;
wire   [1:0] j_1_fu_679_p2;
reg   [1:0] j_1_reg_1294;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_113;
wire   [0:0] exitcond6_fu_673_p2;
wire   [1:0] k_2_fu_705_p2;
reg   [1:0] k_2_reg_1307;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_127;
wire   [5:0] minArray_2_V_16_fu_851_p3;
reg   [5:0] minArray_2_V_16_reg_1312;
wire   [0:0] exitcond9_fu_699_p2;
wire   [3:0] p_0166_5_fu_877_p3;
reg   [3:0] p_0166_5_reg_1317;
wire   [3:0] i_5_fu_905_p2;
reg   [3:0] i_5_reg_1325;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_143;
wire   [5:0] tmp_21_fu_929_p2;
reg   [5:0] tmp_21_reg_1330;
wire   [0:0] exitcond5_fu_899_p2;
reg   [3:0] voteArray_V_addr_10_reg_1336;
reg   [3:0] sumArr_0_V_addr_1_reg_1342;
wire   [1:0] j_2_fu_941_p2;
reg   [1:0] j_2_reg_1350;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_161;
wire   [0:0] exitcond8_fu_935_p2;
wire   [1:0] k_3_fu_967_p2;
reg   [1:0] k_3_reg_1363;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_175;
wire   [0:0] tmp_16_fu_991_p2;
reg   [0:0] tmp_16_reg_1373;
wire   [0:0] exitcond1_fu_961_p2;
wire   [0:0] tmp_10_fu_973_p2;
wire   [1:0] l_1_fu_1016_p2;
reg   [1:0] l_1_reg_1383;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_193;
wire   [0:0] exitcond11_fu_1010_p2;
wire   [3:0] i_4_fu_1049_p2;
reg   [3:0] i_4_reg_1396;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_207;
wire   [0:0] exitcond7_fu_1043_p2;
wire   [5:0] sum_V_fu_1066_p2;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_221;
wire   [3:0] i_6_fu_1078_p2;
reg   [3:0] i_6_reg_1417;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_230;
wire   [0:0] exitcond10_fu_1072_p2;
wire   [5:0] p_0182_1_fu_1122_p3;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_246;
wire   [5:0] p_0174_1_fu_1130_p3;
wire   [3:0] i_7_fu_1144_p2;
reg   [3:0] i_7_reg_1445;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_257;
wire   [0:0] tmp_7_fu_1150_p2;
reg   [0:0] tmp_7_reg_1450;
wire   [0:0] exitcond_fu_1138_p2;
wire   [3:0] p_0158_2_fu_1171_p3;
reg   [3:0] p_0158_2_reg_1461;
wire   [5:0] p_0186_2_fu_1205_p3;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_275;
wire   [5:0] p_0182_4_fu_1212_p3;
reg   [3:0] voteArray_V_address0;
reg    voteArray_V_ce0;
reg    voteArray_V_we0;
wire   [5:0] voteArray_V_q0;
reg   [3:0] voteArray_V_address1;
reg    voteArray_V_ce1;
reg    voteArray_V_we1;
reg   [5:0] voteArray_V_d1;
wire   [5:0] voteArray_V_q1;
reg   [3:0] sumArr_0_V_address0;
reg    sumArr_0_V_ce0;
reg    sumArr_0_V_we0;
reg   [5:0] sumArr_0_V_d0;
wire   [5:0] sumArr_0_V_q0;
reg   [3:0] i_reg_259;
wire   [0:0] exitcond2_fu_532_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_315;
reg   [1:0] k_reg_270;
wire   [0:0] exitcond3_fu_549_p2;
reg   [3:0] i5_reg_281;
reg   [1:0] j_reg_292;
reg   [3:0] p_0166_2_reg_303;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_342;
reg   [1:0] k6_reg_314;
reg   [3:0] i7_reg_325;
reg   [1:0] j8_reg_336;
reg   [1:0] p_0162_2_reg_347;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_365;
wire   [0:0] tmp_20_fu_1004_p2;
reg   [1:0] k9_reg_367;
reg   [1:0] l_reg_382;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_384;
reg   [5:0] p_s_reg_393;
reg   [3:0] i4_reg_405;
reg   [5:0] p_4_reg_416;
wire   [0:0] tmp_3_fu_1060_p2;
reg   [5:0] p_5_reg_428;
reg   [3:0] val_assign_1_reg_440;
reg   [5:0] p_2_reg_452;
reg   [5:0] p_0182_2_reg_464;
reg   [3:0] p_3_reg_476;
reg   [3:0] val_assign_reg_487;
reg   [5:0] p_0182_5_reg_499;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_435;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_446;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_457;
wire   [63:0] tmp_fu_544_p1;
wire  signed [63:0] tmp_28_cast_fu_694_p1;
wire   [63:0] tmp_1_fu_911_p1;
wire  signed [63:0] tmp_29_cast_fu_956_p1;
wire  signed [63:0] tmp_30_cast_fu_1031_p1;
wire   [63:0] tmp_4_fu_1055_p1;
wire   [63:0] tmp_9_fu_1084_p1;
wire   [63:0] tmp_14_fu_1166_p1;
reg   [5:0] minArray_0_V_fu_64;
wire   [5:0] minArray_0_V_1_fu_605_p3;
reg   [5:0] minArray_1_V_fu_68;
wire   [5:0] minArray_1_V_1_fu_597_p3;
reg   [5:0] minArray_2_V_fu_72;
wire   [5:0] minArray_2_V_1_fu_581_p3;
reg   [5:0] minArray_2_V_3_fu_76;
reg   [5:0] minArray_2_V_4_fu_80;
wire   [5:0] minArray_2_V_14_fu_835_p3;
reg   [5:0] minArray_2_V_2_fu_84;
wire   [5:0] minArray_2_V_6_fu_819_p3;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_521;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_535;
wire   [5:0] tmp_19_fu_997_p2;
wire   [5:0] tmp_22_fu_1036_p2;
wire   [0:0] sel_tmp_fu_561_p2;
wire   [0:0] sel_tmp3_fu_575_p2;
wire   [5:0] sel_tmp2_fu_567_p3;
wire   [5:0] sel_tmp6_fu_589_p3;
wire   [5:0] tmp_s_fu_659_p3;
wire   [5:0] tmp_cast_fu_655_p1;
wire   [5:0] tmp_2_cast_fu_685_p1;
wire   [5:0] tmp_23_fu_689_p2;
wire   [5:0] tmp_18_fu_717_p5;
wire   [0:0] sel_tmp1_fu_741_p2;
wire   [0:0] sel_tmp5_fu_755_p2;
wire   [5:0] minArray_2_V_8_fu_747_p3;
wire   [5:0] minArray_2_V_9_fu_769_p3;
wire   [0:0] tmp_8_fu_729_p2;
wire   [0:0] tmp_11_fu_735_p2;
wire   [0:0] sel_tmp8_fu_793_p2;
wire   [0:0] tmp19_fu_799_p2;
wire   [0:0] tmp_6_fu_711_p2;
wire   [0:0] sel_tmp9_fu_805_p2;
wire   [5:0] minArray_2_V_5_fu_761_p3;
wire   [5:0] minArray_2_V_12_fu_811_p3;
wire   [5:0] minArray_2_V_10_fu_777_p3;
wire   [5:0] minArray_2_V_13_fu_827_p3;
wire   [5:0] minArray_2_V_11_fu_785_p3;
wire   [5:0] minArray_2_V_15_fu_843_p3;
wire   [3:0] sel_tmp4_fu_859_p1;
wire   [0:0] sel_tmp10_fu_871_p2;
wire   [3:0] sel_tmp7_fu_863_p3;
wire   [5:0] tmp_5_fu_921_p3;
wire   [5:0] tmp_1_cast_fu_917_p1;
wire   [5:0] tmp_5_cast_fu_947_p1;
wire   [5:0] tmp_25_fu_951_p2;
wire   [5:0] tmp_24_fu_979_p5;
wire   [5:0] tmp_21_cast_fu_1022_p1;
wire   [5:0] tmp_27_fu_1026_p2;
wire   [0:0] tmp_17_fu_1096_p2;
wire   [5:0] maxIndex_V_1_fu_1102_p1;
wire   [0:0] tmp_12_fu_1090_p2;
wire   [5:0] maxIndex_V_1_4_fu_1106_p3;
wire   [5:0] minSum_V_5_fu_1114_p3;
wire   [0:0] tmp_13_fu_1156_p2;
wire   [3:0] p_s_16_fu_1162_p1;
wire   [0:0] tmp_15_fu_1179_p2;
wire   [5:0] maxIndex_V_fu_1185_p1;
wire   [5:0] p_2_maxVal_V_fu_1189_p3;
wire   [5:0] p_0182_2_maxIndex_V_fu_1197_p3;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_835;
wire   [3:0] tmp_26_fu_1219_p1;
reg   [3:0] ap_return_preg;
reg   [27:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'b1;
#0 ap_return_preg = 4'b0000;
end

dut_knn_vote_voteArray_V #(
    .DataWidth( 6 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
voteArray_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(voteArray_V_address0),
    .ce0(voteArray_V_ce0),
    .we0(voteArray_V_we0),
    .d0(ap_const_lv6_0),
    .q0(voteArray_V_q0),
    .address1(voteArray_V_address1),
    .ce1(voteArray_V_ce1),
    .we1(voteArray_V_we1),
    .d1(voteArray_V_d1),
    .q1(voteArray_V_q1)
);

dut_knn_vote_sumArr_0_V #(
    .DataWidth( 6 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
sumArr_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sumArr_0_V_address0),
    .ce0(sumArr_0_V_ce0),
    .we0(sumArr_0_V_we0),
    .d0(sumArr_0_V_d0),
    .q0(sumArr_0_V_q0)
);

dut_mux_3to1_sel2_6_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_3to1_sel2_6_1_U5(
    .din1(minArray_2_V_3_fu_76),
    .din2(minArray_2_V_4_fu_80),
    .din3(minArray_2_V_2_fu_84),
    .din4(k6_reg_314),
    .dout(tmp_18_fu_717_p5)
);

dut_mux_3to1_sel2_6_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_3to1_sel2_6_1_U6(
    .din1(minArray_2_V_3_fu_76),
    .din2(minArray_2_V_4_fu_80),
    .din3(minArray_2_V_2_fu_84),
    .din4(k9_reg_367),
    .dout(tmp_24_fu_979_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv4_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
            ap_return_preg <= tmp_26_fu_1219_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond5_fu_899_p2))) begin
        i4_reg_405 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        i4_reg_405 <= i_4_reg_1396;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond6_fu_673_p2))) begin
        i5_reg_281 <= i_3_reg_1281;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_549_p2))) begin
        i5_reg_281 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~(1'b0 == exitcond8_fu_935_p2))) begin
        i7_reg_325 <= i_5_reg_1325;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(exitcond4_fu_643_p2 == 1'b0))) begin
        i7_reg_325 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_reg_259 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond2_fu_532_p2))) begin
        i_reg_259 <= i_2_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~(1'b0 == exitcond1_fu_961_p2))) begin
        j8_reg_336 <= j_2_reg_1350;
    end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond5_fu_899_p2))) begin
        j8_reg_336 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == exitcond9_fu_699_p2))) begin
        j_reg_292 <= j_1_reg_1294;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & (exitcond4_fu_643_p2 == 1'b0))) begin
        j_reg_292 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        k6_reg_314 <= k_2_reg_1307;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        k6_reg_314 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & (1'b0 == exitcond1_fu_961_p2) & (1'b0 == tmp_10_fu_973_p2))) begin
        k9_reg_367 <= k_3_fu_967_p2;
    end else if ((((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (1'b0 == tmp_20_fu_1004_p2)) | ((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond11_fu_1010_p2)))) begin
        k9_reg_367 <= k_3_reg_1363;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        k9_reg_367 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond2_fu_532_p2))) begin
        k_reg_270 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond3_fu_549_p2))) begin
        k_reg_270 <= k_1_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & ~(1'b0 == tmp_20_fu_1004_p2))) begin
        l_reg_382 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        l_reg_382 <= l_1_reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == exitcond9_fu_699_p2))) begin
        minArray_2_V_2_fu_84 <= minArray_2_V_6_fu_819_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_549_p2))) begin
        minArray_2_V_2_fu_84 <= minArray_2_V_fu_72;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        minArray_2_V_3_fu_76 <= minArray_2_V_16_reg_1312;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_549_p2))) begin
        minArray_2_V_3_fu_76 <= minArray_0_V_fu_64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == exitcond9_fu_699_p2))) begin
        minArray_2_V_4_fu_80 <= minArray_2_V_14_fu_835_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_549_p2))) begin
        minArray_2_V_4_fu_80 <= minArray_1_V_fu_68;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond11_fu_1010_p2))) begin
        p_0162_2_reg_347 <= ap_const_lv2_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & (1'b0 == exitcond1_fu_961_p2) & (1'b0 == tmp_10_fu_973_p2))) begin
        p_0162_2_reg_347 <= p_0162_2_reg_347;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | ((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (1'b0 == tmp_20_fu_1004_p2)))) begin
        p_0162_2_reg_347 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        p_0166_2_reg_303 <= p_0166_5_reg_1317;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        p_0166_2_reg_303 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond7_fu_1043_p2) & ~(1'b0 == tmp_3_fu_1060_p2))) begin
        p_0182_2_reg_464 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_0182_2_reg_464 <= p_0182_4_fu_1212_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~(1'b0 == exitcond10_fu_1072_p2))) begin
        p_0182_5_reg_499 <= p_4_reg_416;
    end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & ~(1'b0 == exitcond_fu_1138_p2))) begin
        p_0182_5_reg_499 <= p_0182_2_reg_464;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond7_fu_1043_p2) & ~(1'b0 == tmp_3_fu_1060_p2))) begin
        p_2_reg_452 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_2_reg_452 <= p_0186_2_fu_1205_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond7_fu_1043_p2) & ~(1'b0 == tmp_3_fu_1060_p2))) begin
        p_3_reg_476 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_3_reg_476 <= p_0158_2_reg_1461;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == tmp_3_fu_1060_p2) & ~(1'b0 == exitcond7_fu_1043_p2))) begin
        p_4_reg_416 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        p_4_reg_416 <= p_0182_1_fu_1122_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == tmp_3_fu_1060_p2) & ~(1'b0 == exitcond7_fu_1043_p2))) begin
        p_5_reg_428 <= ap_const_lv6_3F;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        p_5_reg_428 <= p_0174_1_fu_1130_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond5_fu_899_p2))) begin
        p_s_reg_393 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        p_s_reg_393 <= sum_V_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == tmp_3_fu_1060_p2) & ~(1'b0 == exitcond7_fu_1043_p2))) begin
        val_assign_1_reg_440 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        val_assign_1_reg_440 <= i_6_reg_1417;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond7_fu_1043_p2) & ~(1'b0 == tmp_3_fu_1060_p2))) begin
        val_assign_reg_487 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        val_assign_reg_487 <= i_7_reg_1445;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_3_reg_1281 <= i_3_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        i_4_reg_1396 <= i_4_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        i_5_reg_1325 <= i_5_fu_905_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        i_6_reg_1417 <= i_6_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        i_7_reg_1445 <= i_7_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        j_1_reg_1294 <= j_1_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        j_2_reg_1350 <= j_2_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        k_2_reg_1307 <= k_2_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        k_3_reg_1363 <= k_3_fu_967_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        l_1_reg_1383 <= l_1_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond3_fu_549_p2))) begin
        minArray_0_V_fu_64 <= minArray_0_V_1_fu_605_p3;
        minArray_1_V_fu_68 <= minArray_1_V_1_fu_597_p3;
        minArray_2_V_fu_72 <= minArray_2_V_1_fu_581_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (1'b0 == exitcond9_fu_699_p2))) begin
        minArray_2_V_16_reg_1312 <= minArray_2_V_16_fu_851_p3;
        p_0166_5_reg_1317 <= p_0166_5_fu_877_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_fu_1138_p2))) begin
        p_0158_2_reg_1461 <= p_0158_2_fu_1171_p3;
        tmp_7_reg_1450 <= tmp_7_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        reg_528 <= knn_set_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond5_fu_899_p2))) begin
        sumArr_0_V_addr_1_reg_1342 <= tmp_1_fu_911_p1;
        tmp_21_reg_1330 <= tmp_21_fu_929_p2;
        voteArray_V_addr_10_reg_1336 <= tmp_1_fu_911_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & (1'b0 == exitcond1_fu_961_p2) & ~(1'b0 == tmp_10_fu_973_p2))) begin
        tmp_16_reg_1373 <= tmp_16_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & (exitcond4_fu_643_p2 == 1'b0))) begin
        tmp_2_reg_1286 <= tmp_2_fu_667_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        ap_return = tmp_26_fu_1219_p1;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_63) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_127) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_342) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_143) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_161) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_70) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_175) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_535) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_521) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_365) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_45) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_193) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_384) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_207) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_221) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_230) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_246) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_257) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_275) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_835) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_435) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_446) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_457) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_315) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_80) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_98) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_113) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        knn_set_V_address0 = tmp_30_cast_fu_1031_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        knn_set_V_address0 = tmp_29_cast_fu_956_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        knn_set_V_address0 = tmp_28_cast_fu_694_p1;
    end else begin
        knn_set_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        knn_set_V_ce0 = 1'b1;
    end else begin
        knn_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        sumArr_0_V_address0 = tmp_fu_544_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        sumArr_0_V_address0 = tmp_9_fu_1084_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        sumArr_0_V_address0 = tmp_4_fu_1055_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        sumArr_0_V_address0 = sumArr_0_V_addr_1_reg_1342;
    end else begin
        sumArr_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        sumArr_0_V_ce0 = 1'b1;
    end else begin
        sumArr_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        sumArr_0_V_d0 = tmp_22_fu_1036_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        sumArr_0_V_d0 = ap_const_lv6_0;
    end else begin
        sumArr_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond2_fu_532_p2)) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        sumArr_0_V_we0 = 1'b1;
    end else begin
        sumArr_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        voteArray_V_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        voteArray_V_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        voteArray_V_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        voteArray_V_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        voteArray_V_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        voteArray_V_address0 = tmp_14_fu_1166_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        voteArray_V_address0 = voteArray_V_addr_10_reg_1336;
    end else begin
        voteArray_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        voteArray_V_address1 = voteArray_V_addr_10_reg_1336;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        voteArray_V_address1 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        voteArray_V_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        voteArray_V_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        voteArray_V_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        voteArray_V_address1 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        voteArray_V_address1 = tmp_9_fu_1084_p1;
    end else begin
        voteArray_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        voteArray_V_ce0 = 1'b1;
    end else begin
        voteArray_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        voteArray_V_ce1 = 1'b1;
    end else begin
        voteArray_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        voteArray_V_d1 = tmp_19_fu_997_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        voteArray_V_d1 = ap_const_lv6_0;
    end else begin
        voteArray_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        voteArray_V_we0 = 1'b1;
    end else begin
        voteArray_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & ~(1'b0 == tmp_16_reg_1373)))) begin
        voteArray_V_we1 = 1'b1;
    end else begin
        voteArray_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == exitcond2_fu_532_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond3_fu_549_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : begin
            if ((exitcond4_fu_643_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st9_fsm_8 : begin
            if ((1'b0 == exitcond6_fu_673_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if ((1'b0 == exitcond9_fu_699_p2)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st13_fsm_12 : begin
            if ((1'b0 == exitcond5_fu_899_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st14_fsm_13 : begin
            if ((1'b0 == exitcond8_fu_935_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            if (((1'b0 == exitcond1_fu_961_p2) & ~(1'b0 == tmp_10_fu_973_p2))) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else if (((1'b0 == exitcond1_fu_961_p2) & (1'b0 == tmp_10_fu_973_p2))) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            if (~(1'b0 == tmp_20_fu_1004_p2)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st20_fsm_19 : begin
            if ((1'b0 == exitcond11_fu_1010_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st22_fsm_21 : begin
            if ((~(1'b0 == exitcond7_fu_1043_p2) & ~(1'b0 == tmp_3_fu_1060_p2))) begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end else if (((1'b0 == tmp_3_fu_1060_p2) & ~(1'b0 == exitcond7_fu_1043_p2))) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st24_fsm_23 : begin
            if (~(1'b0 == exitcond10_fu_1072_p2)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st26_fsm_25 : begin
            if (~(1'b0 == exitcond_fu_1138_p2)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_113 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_127 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_143 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_161 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_175 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_193 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_207 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_221 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_230 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_246 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_257 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_275 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_315 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_342 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_365 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_384 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_435 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_446 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_45 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_457 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_521 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_535 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_63 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_70 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_80 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_835 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_98 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

assign exitcond10_fu_1072_p2 = ((val_assign_1_reg_440 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond11_fu_1010_p2 = ((l_reg_382 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond1_fu_961_p2 = ((k9_reg_367 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond2_fu_532_p2 = ((i_reg_259 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond3_fu_549_p2 = ((k_reg_270 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond4_fu_643_p2 = ((i5_reg_281 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond5_fu_899_p2 = ((i7_reg_325 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond6_fu_673_p2 = ((j_reg_292 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond7_fu_1043_p2 = ((i4_reg_405 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond8_fu_935_p2 = ((j8_reg_336 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond9_fu_699_p2 = ((k6_reg_314 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_fu_1138_p2 = ((val_assign_reg_487 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign i_2_fu_538_p2 = (i_reg_259 + ap_const_lv4_1);

assign i_3_fu_649_p2 = (i5_reg_281 + ap_const_lv4_1);

assign i_4_fu_1049_p2 = (i4_reg_405 + ap_const_lv4_1);

assign i_5_fu_905_p2 = (i7_reg_325 + ap_const_lv4_1);

assign i_6_fu_1078_p2 = (val_assign_1_reg_440 + ap_const_lv4_1);

assign i_7_fu_1144_p2 = (val_assign_reg_487 + ap_const_lv4_1);

assign j_1_fu_679_p2 = (j_reg_292 + ap_const_lv2_1);

assign j_2_fu_941_p2 = (j8_reg_336 + ap_const_lv2_1);

assign k_1_fu_555_p2 = (k_reg_270 + ap_const_lv2_1);

assign k_2_fu_705_p2 = (k6_reg_314 + ap_const_lv2_1);

assign k_3_fu_967_p2 = (k9_reg_367 + ap_const_lv2_1);

assign l_1_fu_1016_p2 = (l_reg_382 + ap_const_lv2_1);

assign maxIndex_V_1_4_fu_1106_p3 = ((tmp_17_fu_1096_p2[0:0] === 1'b1) ? maxIndex_V_1_fu_1102_p1 : p_4_reg_416);

assign maxIndex_V_1_fu_1102_p1 = val_assign_1_reg_440;

assign maxIndex_V_fu_1185_p1 = val_assign_reg_487;

assign minArray_0_V_1_fu_605_p3 = ((sel_tmp3_fu_575_p2[0:0] === 1'b1) ? ap_const_lv6_32 : minArray_0_V_fu_64);

assign minArray_1_V_1_fu_597_p3 = ((sel_tmp3_fu_575_p2[0:0] === 1'b1) ? minArray_1_V_fu_68 : sel_tmp6_fu_589_p3);

assign minArray_2_V_10_fu_777_p3 = ((sel_tmp5_fu_755_p2[0:0] === 1'b1) ? minArray_2_V_4_fu_80 : minArray_2_V_9_fu_769_p3);

assign minArray_2_V_11_fu_785_p3 = ((sel_tmp5_fu_755_p2[0:0] === 1'b1) ? reg_528 : minArray_2_V_3_fu_76);

assign minArray_2_V_12_fu_811_p3 = ((sel_tmp9_fu_805_p2[0:0] === 1'b1) ? minArray_2_V_5_fu_761_p3 : minArray_2_V_2_fu_84);

assign minArray_2_V_13_fu_827_p3 = ((sel_tmp9_fu_805_p2[0:0] === 1'b1) ? minArray_2_V_10_fu_777_p3 : minArray_2_V_4_fu_80);

assign minArray_2_V_14_fu_835_p3 = ((tmp_6_fu_711_p2[0:0] === 1'b1) ? minArray_2_V_13_fu_827_p3 : minArray_2_V_4_fu_80);

assign minArray_2_V_15_fu_843_p3 = ((sel_tmp9_fu_805_p2[0:0] === 1'b1) ? minArray_2_V_11_fu_785_p3 : minArray_2_V_3_fu_76);

assign minArray_2_V_16_fu_851_p3 = ((tmp_6_fu_711_p2[0:0] === 1'b1) ? minArray_2_V_15_fu_843_p3 : minArray_2_V_3_fu_76);

assign minArray_2_V_1_fu_581_p3 = ((sel_tmp3_fu_575_p2[0:0] === 1'b1) ? minArray_2_V_fu_72 : sel_tmp2_fu_567_p3);

assign minArray_2_V_5_fu_761_p3 = ((sel_tmp5_fu_755_p2[0:0] === 1'b1) ? minArray_2_V_2_fu_84 : minArray_2_V_8_fu_747_p3);

assign minArray_2_V_6_fu_819_p3 = ((tmp_6_fu_711_p2[0:0] === 1'b1) ? minArray_2_V_12_fu_811_p3 : minArray_2_V_2_fu_84);

assign minArray_2_V_8_fu_747_p3 = ((sel_tmp1_fu_741_p2[0:0] === 1'b1) ? minArray_2_V_2_fu_84 : reg_528);

assign minArray_2_V_9_fu_769_p3 = ((sel_tmp1_fu_741_p2[0:0] === 1'b1) ? reg_528 : minArray_2_V_4_fu_80);

assign minSum_V_5_fu_1114_p3 = ((tmp_17_fu_1096_p2[0:0] === 1'b1) ? sumArr_0_V_q0 : p_5_reg_428);

assign p_0158_2_fu_1171_p3 = ((tmp_7_fu_1150_p2[0:0] === 1'b1) ? p_s_16_fu_1162_p1 : p_3_reg_476);

assign p_0166_5_fu_877_p3 = ((sel_tmp10_fu_871_p2[0:0] === 1'b1) ? ap_const_lv4_1 : sel_tmp7_fu_863_p3);

assign p_0174_1_fu_1130_p3 = ((tmp_12_fu_1090_p2[0:0] === 1'b1) ? minSum_V_5_fu_1114_p3 : p_5_reg_428);

assign p_0182_1_fu_1122_p3 = ((tmp_12_fu_1090_p2[0:0] === 1'b1) ? maxIndex_V_1_4_fu_1106_p3 : p_4_reg_416);

assign p_0182_2_maxIndex_V_fu_1197_p3 = ((tmp_15_fu_1179_p2[0:0] === 1'b1) ? p_0182_2_reg_464 : maxIndex_V_fu_1185_p1);

assign p_0182_4_fu_1212_p3 = ((tmp_7_reg_1450[0:0] === 1'b1) ? p_0182_2_maxIndex_V_fu_1197_p3 : p_0182_2_reg_464);

assign p_0186_2_fu_1205_p3 = ((tmp_7_reg_1450[0:0] === 1'b1) ? p_2_maxVal_V_fu_1189_p3 : p_2_reg_452);

assign p_2_maxVal_V_fu_1189_p3 = ((tmp_15_fu_1179_p2[0:0] === 1'b1) ? p_2_reg_452 : voteArray_V_q0);

assign p_s_16_fu_1162_p1 = tmp_13_fu_1156_p2;

assign sel_tmp10_fu_871_p2 = (tmp_6_fu_711_p2 & tmp_8_fu_729_p2);

assign sel_tmp1_fu_741_p2 = ((k6_reg_314 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_567_p3 = ((sel_tmp_fu_561_p2[0:0] === 1'b1) ? minArray_2_V_fu_72 : ap_const_lv6_32);

assign sel_tmp3_fu_575_p2 = ((k_reg_270 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_859_p1 = sel_tmp9_fu_805_p2;

assign sel_tmp5_fu_755_p2 = ((k6_reg_314 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_589_p3 = ((sel_tmp_fu_561_p2[0:0] === 1'b1) ? ap_const_lv6_32 : minArray_1_V_fu_68);

assign sel_tmp7_fu_863_p3 = ((tmp_6_fu_711_p2[0:0] === 1'b1) ? sel_tmp4_fu_859_p1 : p_0166_2_reg_303);

assign sel_tmp8_fu_793_p2 = (tmp_8_fu_729_p2 ^ 1'b1);

assign sel_tmp9_fu_805_p2 = (tmp19_fu_799_p2 & tmp_6_fu_711_p2);

assign sel_tmp_fu_561_p2 = ((k_reg_270 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sum_V_fu_1066_p2 = (sumArr_0_V_q0 + p_s_reg_393);

assign tmp19_fu_799_p2 = (tmp_11_fu_735_p2 & sel_tmp8_fu_793_p2);

assign tmp_10_fu_973_p2 = ((p_0162_2_reg_347 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_11_fu_735_p2 = ((reg_528 < tmp_18_fu_717_p5) ? 1'b1 : 1'b0);

assign tmp_12_fu_1090_p2 = ((voteArray_V_q1 == ap_const_lv6_3) ? 1'b1 : 1'b0);

assign tmp_13_fu_1156_p2 = ((p_2_reg_452 == ap_const_lv6_3) ? 1'b1 : 1'b0);

assign tmp_14_fu_1166_p1 = val_assign_reg_487;

assign tmp_15_fu_1179_p2 = ((voteArray_V_q0 < p_2_reg_452) ? 1'b1 : 1'b0);

assign tmp_16_fu_991_p2 = ((reg_528 == tmp_24_fu_979_p5) ? 1'b1 : 1'b0);

assign tmp_17_fu_1096_p2 = ((sumArr_0_V_q0 < p_5_reg_428) ? 1'b1 : 1'b0);

assign tmp_19_fu_997_p2 = (voteArray_V_q0 + ap_const_lv6_1);

assign tmp_1_cast_fu_917_p1 = i7_reg_325;

assign tmp_1_fu_911_p1 = i7_reg_325;

assign tmp_20_fu_1004_p2 = ((voteArray_V_q0 == ap_const_lv6_3) ? 1'b1 : 1'b0);

assign tmp_21_cast_fu_1022_p1 = l_reg_382;

assign tmp_21_fu_929_p2 = (tmp_5_fu_921_p3 - tmp_1_cast_fu_917_p1);

assign tmp_22_fu_1036_p2 = (sumArr_0_V_q0 + knn_set_V_q0);

assign tmp_23_fu_689_p2 = (tmp_2_reg_1286 + tmp_2_cast_fu_685_p1);

assign tmp_25_fu_951_p2 = (tmp_21_reg_1330 + tmp_5_cast_fu_947_p1);

assign tmp_26_fu_1219_p1 = p_0182_5_reg_499[3:0];

assign tmp_27_fu_1026_p2 = (tmp_21_reg_1330 + tmp_21_cast_fu_1022_p1);

assign tmp_28_cast_fu_694_p1 = $signed(tmp_23_fu_689_p2);

assign tmp_29_cast_fu_956_p1 = $signed(tmp_25_fu_951_p2);

assign tmp_2_cast_fu_685_p1 = j_reg_292;

assign tmp_2_fu_667_p2 = (tmp_s_fu_659_p3 - tmp_cast_fu_655_p1);

assign tmp_30_cast_fu_1031_p1 = $signed(tmp_27_fu_1026_p2);

assign tmp_3_fu_1060_p2 = ((p_s_reg_393 == ap_const_lv6_0) ? 1'b1 : 1'b0);

assign tmp_4_fu_1055_p1 = i4_reg_405;

assign tmp_5_cast_fu_947_p1 = j8_reg_336;

assign tmp_5_fu_921_p3 = {{i7_reg_325}, {ap_const_lv2_0}};

assign tmp_6_fu_711_p2 = ((p_0166_2_reg_303 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_7_fu_1150_p2 = ((p_3_reg_476 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_8_fu_729_p2 = ((reg_528 == tmp_18_fu_717_p5) ? 1'b1 : 1'b0);

assign tmp_9_fu_1084_p1 = val_assign_1_reg_440;

assign tmp_cast_fu_655_p1 = i5_reg_281;

assign tmp_fu_544_p1 = i_reg_259;

assign tmp_s_fu_659_p3 = {{i5_reg_281}, {ap_const_lv2_0}};

endmodule //dut_knn_vote
